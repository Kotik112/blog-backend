name: CI
on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      # Checkout code
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Setup Java
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      # Mvnw permission
      - name: Change wrapper permissions
        run: chmod +x ./mvnw

      # Cache Maven packages
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
           path: ~/.m2
           key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
           restore-keys: |
            ${{ runner.os }}-m2-

      - name: Test with Maven
        if: false
        run: ./mvnw clean test -DskipTests=false -Pci

      - name: Build JAR (for deployment)
        run: ./mvnw clean package -DskipTests -Pci

      - name: Create zip for Elastic Beanstalk
        run: |
          mkdir -p staging/.ebextensions
          cp target/*.jar staging/application.jar

          # Create Procfile
          echo 'web: java -jar application.jar' > staging/Procfile

          # Inject environment variables into .ebextensions config
          echo "option_settings:" > staging/.ebextensions/01_environment.config
          echo "  aws:elasticbeanstalk:application:environment:" >> staging/.ebextensions/01_environment.config
          echo "    SPRING_PROFILES_ACTIVE: dev" >> staging/.ebextensions/01_environment.config
          echo "    DB_URL: \"${{ secrets.DB_URL }}\"" >> staging/.ebextensions/01_environment.config
          echo "    DB_USER: \"${{ secrets.DB_USER }}\"" >> staging/.ebextensions/01_environment.config
          echo "    DB_PW: \"${{ secrets.DB_PW }}\"" >> staging/.ebextensions/01_environment.config

          # Create deploy.zip from staging directory
          cd staging
          zip -r ../deploy.zip .
          cd ..

      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v22
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ secrets.EB_APPLICATION_NAME }}
          environment_name: ${{ secrets.EB_ENVIRONMENT_NAME }}
          version_label: v-${{ github.run_number }}
          region: ${{ secrets.AWS_REGION }}
          deployment_package: deploy.zip